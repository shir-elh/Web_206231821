Requirements File

This document outlines the software requirements for a project.

Modules Installed:
1. path
2. express
3. dbConfig
4. body-parser
5. utils
6. db

Table Creation and Operations path:
\useDB,
\createDB,
\createGender,
\createSkinType,
\createUser,
\insertGender,
\insertSkinType,
\selectGender,
\selectSkinType,
\selectUser,
\dropAll

Table Syntax:
1. Gender
function createGender(fail, succsess, res) {
    connection.query(`SHOW TABLES LIKE 'gender'`, function (err, result) {
        if (err) {
            console.log(err)
            fail(res);
        }
        if (result.length === 0) {
            connection.query('CREATE TABLE `gender` ( \
            `name` varchar(45) NOT NULL, \
            PRIMARY KEY (`name`) \
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;', function (err, result) {
                if (err) {
                    console.log(err)
                }
                console.log(result);
                succsess(res);
            })
        } else {
            succsess(res);
        }
    })
}

2. Skin Type
 -function createSkinType(fail, succsess, res) {
    connection.query(`SHOW TABLES LIKE 'skin_type'`, function (err, result) {
        if (err) {
            console.log(err)
            fail(res);
        }
        if (result.length === 0) {
            connection.query('CREATE TABLE `skin_type` ( \
            `name` varchar(45) NOT NULL, \
            PRIMARY KEY (`name`) \
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;', function (err, result) {
                if (err) {
                    console.log(err)
                }
                console.log(result);
                succsess(res);
            })
        } else {
            succsess(res);
        }
    })
}

3. User
  function createUser(fail, succsess, res) {
    connection.query(`SHOW TABLES LIKE 'user'`, function (err, result) {
        if (err) {
            console.log(err)
            fail(res);
        }
        if (result.length === 0) {
            connection.query('CREATE TABLE `user` ( \
                `user_id` int NOT NULL AUTO_INCREMENT, \
                `name` varchar(45) DEFAULT NULL, \
                `email_address` varchar(90) DEFAULT NULL, \
                `password` varchar(45) DEFAULT NULL, \
                `address` varchar(45) DEFAULT NULL, \
                `phone_number` varchar(45) DEFAULT NULL, \
                `zip_code` int DEFAULT NULL, \
                `has_allergy` tinyint DEFAULT NULL, \
                `has_medical_approval` tinyint DEFAULT NULL, \
                `gender` varchar(45) DEFAULT NULL, \
                `skin_type` varchar(45) DEFAULT NULL, \
                `about` varchar(100) DEFAULT NULL, \
                PRIMARY KEY (`user_id`), \
                UNIQUE KEY `email_address_UNIQUE` (`email_address`), \
                KEY `gender_fk_idx` (`gender`), \
                KEY `skin_type_fk_idx` (`skin_type`), \
                CONSTRAINT `gender_fk` FOREIGN KEY (`gender`) REFERENCES `gender` (`name`), \
                CONSTRAINT `skin_type_fk` FOREIGN KEY (`skin_type`) REFERENCES `skin_type` (`name`) \
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;', function (err, result) {
                if (err) {
                    console.log(err)
                }
                console.log(result);
                succsess(res);
            })
        } else {
            succsess(res);
        }
    })
}

4. DB:
function createDB(fail, succsess, res) {
    connection.query('CREATE SCHEMA `linda_nails`', function (err, result) {
        if (err) {
            console.log(err)
            fail(res);
        }
        useDB();
        succsess(res);
    })
}
